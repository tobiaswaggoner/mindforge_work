{"config":{"lang":["de"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Willkommen bei Mind Forge!","text":"<p>Dies ist der AI-Native Project Hub f\u00fcr unser Projekt Mind Forge: Eine KI-gest\u00fctzte Lernplattform f\u00fcr Sch\u00fcler \u2013 geschmiedet von einem kleinen, aber feinen Team. Published to Mindforge Work</p>"},{"location":"#1-das-team-the-smiths","title":"1. Das Team (The Smiths)","text":"<ul> <li>Tobias: Master Smith</li> <li>Michi: Apprentice / Rapid Prototyping</li> <li>Tim: Apprentice / Rapid Prototyping</li> </ul>"},{"location":"#2-unsere-philosophie-warum-diese-schmiede","title":"2. Unsere Philosophie (Warum diese Schmiede?)","text":"<p>Wir verzichten bewusst auf \"Old-School\"-Tools wie Jira oder Azure DevOps. Unser Ziel ist ein Low-Tech &amp; AI-First-Ansatz.</p> <ul> <li>Low-Tech: Alles ist Text (Markdown), alles ist in Git. Kein Einarbeiten in komplexe Tools. Die besten Werkzeuge sind einfach.</li> <li>AI-First: Die Struktur ist darauf optimiert, von KI-Agenten gelesen, verstanden und (sp\u00e4ter) modifiziert zu werden. Claude ist unser vierter Schmied.</li> <li>Git als Event Source: Wir nutzen die Git-Historie (insb. <code>git mv</code>-Befehle) als maschinenlesbares Protokoll unseres Fortschritts. Jede Bewegung einer Datei erz\u00e4hlt eine Geschichte.</li> </ul> <p>Die Schmiede-Metapher: Wir nutzen Schmiede-Terminologie als durchg\u00e4ngiges Vokabular. Nicht als Gag, sondern als konsistente Sprache f\u00fcr unseren Prozess. Siehe <code>CLAUDE.md</code> f\u00fcr Details.</p>"},{"location":"#3-die-struktur-der-schmiede","title":"3. Die Struktur der Schmiede","text":"<p>Die Ordnerstruktur definiert den Prozess:</p> <ul> <li><code>README.md</code>: (Diese Datei) Der Eingang zur Schmiede.</li> <li><code>01_BLUEPRINTS/</code>: Die \"gro\u00dfen\" Pl\u00e4ne. Vision, Strategie, Roadmap. Was wollen wir bauen?</li> <li><code>02_SPARK_CHAMBER/</code>: Unser Ideenraum. Jeder Funke, jede neue Idee kommt als <code>.md</code>-Datei hier hinein. Unstrukturiert, roh, lebendig.</li> <li><code>03_THE_FORGE/</code>: Unser dynamisches Kanban-Board. Der Status einer Aufgabe wird durch ihren Ort definiert:<ul> <li><code>01_Stock/</code>: Rohmaterial. Aufgaben, die bereit zum Schmieden sind.</li> <li><code>02_At_the_Anvil/</code>: Hier wird aktiv gearbeitet. Das Metall ist hei\u00df, die H\u00e4mmer schwingen.</li> <li><code>03_Tempered/</code>: Geh\u00e4rtet und fertig. Abgeschlossen, bereit f\u00fcr Feedback oder als Artifact archiviert.</li> </ul> </li> <li><code>04_FORGE_LOG/</code>: Der Schl\u00fcssel f\u00fcr asynchrone Arbeit. W\u00f6chentliche Updates, wichtige Entscheidungen oder Probleme werden hier als datierte <code>.md</code>-Datei abgelegt. Das Logbuch der Schmiede.</li> <li><code>05_REFERENCE_LIBRARY/</code>: Statisches Wissen. Konkurrenzanalysen, technische Konzepte, UI-Prinzipien. Die Bibliothek des Master Smith.</li> </ul>"},{"location":"#4-der-workflow-von-der-idee-zur-umsetzung","title":"4. Der Workflow: \"Von der Idee zur Umsetzung\"","text":"<p>Unser Prozess ist mehrstufig und nutzt KI-gest\u00fctzte Commands, um von rohen Ideen zu konkreten Features zu gelangen.</p>"},{"location":"#ein-typischer-durchlauf","title":"Ein typischer Durchlauf:","text":"<ol> <li> <p>Spark (Brainstorming): Eine neue Idee entsteht.     <pre><code># Interaktiver Brainstorming-Dialog mit /brainstorm\n/brainstorm [deine Idee]\n\n# Ergebnis: 02_SPARK_CHAMBER/2025-XX-XX-Feature-Idee.md\ngit add 02_SPARK_CHAMBER/2025-XX-XX-Feature-Idee.md\ngit commit -m \"SPARK: Feature-Idee hinzugef\u00fcgt\"\n</code></pre></p> </li> <li> <p>Planning: Die Idee wird in umsetzbare Features zerlegt.     <pre><code># Interaktiver Planning-Dialog mit /plan\n/plan 2025-XX-XX-Feature-Idee.md\n\n# Ergebnis: 1-N Stock Items werden direkt in 03_THE_FORGE/01_Stock/ angelegt\n# z.B. 2025-XX-XX-01-Feature-A.md, 2025-XX-XX-02-Feature-B.md, ...\ngit add 03_THE_FORGE/01_Stock/*.md\ngit commit -m \"PLAN: Feature-Idee in [N] Stock Items zerlegt\"\n</code></pre></p> </li> <li> <p>Forge: Tim beginnt zu schmieden.     <pre><code>git mv 03_THE_FORGE/01_Stock/2025-XX-XX-01-Feature-A.md 03_THE_FORGE/02_At_the_Anvil/\ngit commit -m \"FORGE: Tim beginnt Arbeit an Feature-A\"\n</code></pre></p> </li> <li> <p>Temper: Tim ist fertig. Das Werk wird geh\u00e4rtet.     <pre><code>git mv 03_THE_FORGE/02_At_the_Anvil/2025-XX-XX-01-Feature-A.md 03_THE_FORGE/03_Tempered/\ngit commit -m \"TEMPER: Feature-A abgeschlossen\"\n</code></pre></p> </li> </ol> <p>Pro-Tipp: - Sparks bleiben in der Spark Chamber (werden nicht verschoben) - Stock Items sind das Ergebnis der Planning-Session - Die Git-Historie wird dadurch zu einem perfekt lesbaren Protokoll des Projekts. Maschinen lieben das. Menschen auch.</p>"},{"location":"#5-asynchronitat-das-briefing-ritual","title":"5. Asynchronit\u00e4t (Das Briefing-Ritual)","text":"<ul> <li>Wer arbeitet, hinterl\u00e4sst am Ende der Session/Woche einen kurzen Eintrag im <code>04_FORGE_LOG/</code> (z.B. in <code>2025-11-05_Wochen-Sync.md</code>).</li> <li>KI-Briefing f\u00fcr das Team: Zu Beginn einer neuen Arbeitswoche kann jeder Apprentice (oder der Master Smith) einen KI-Agenten auf dieses Repo (und das Code-Repo) loslassen, um Journal-Eintr\u00e4ge und Git-Logs der letzten 7 Tage zu analysieren und ein Status-Update zu erhalten.</li> <li>Die Schmiede schl\u00e4ft nie: Auch wenn nicht alle gleichzeitig arbeiten, bleibt der Kontext erhalten. Die Logs erz\u00e4hlen die Geschichte.</li> </ul> <p>Bereit? Dann ab an den Amboss. \ud83d\udd28</p>"},{"location":"CLAUDE/","title":"Arbeiten im Mind Forge Repository","text":""},{"location":"CLAUDE/#philosophie-die-schmiede-terminologie","title":"Philosophie: Die Schmiede-Terminologie","text":"<p>Dieses Repository nutzt eine Schmiede-Metapher als durchg\u00e4ngige Terminologie. Anleitung zum Prozess f\u00fcr Coworker in @README.md</p> <p>Wichtig: Dies ist kein thematisches Rollenspiel, sondern professionelle Arbeit mit einem konsistenten, griffigen Vokabular. Die Metapher dient der Klarheit und dem Teamgef\u00fchl - nicht der Ablenkung.</p>"},{"location":"CLAUDE/#leitprinzipien","title":"Leitprinzipien","text":"<ol> <li>Augenzwinkern, nicht \u00dcbertreibung: Die Terminologie soll Charakter haben, aber nie auf Kosten der Klarheit gehen.</li> <li>Konsistenz: Wenn wir \"Forge\" sagen, meinen wir die aktive Bearbeitung. Wenn wir \"Artifact\" sagen, meinen wir ein fertiges Ergebnis.</li> <li>Professionell bleiben: In technischen Diskussionen (Code, Architektur) nutzen wir Standard-Terminologie. Die Forge-Sprache gilt prim\u00e4r f\u00fcr Prozess und Organisation.</li> </ol>"},{"location":"CLAUDE/#kern-terminologie","title":"Kern-Terminologie","text":"Standard Mind Forge Bedeutung Team Roles Master Smith, Apprentice Klare Hierarchie ohne Old-School \"Senior/Junior\" Backlog Ready to Forge / Stock Aufgaben, die bereit zur Bearbeitung sind In Progress At the Anvil Aktive Arbeit Done Tempered / Artifacts Abgeschlossene, \"geh\u00e4rtete\" Ergebnisse Ideas Sparks / Raw Ore Rohmaterial f\u00fcr k\u00fcnftige Arbeit Documentation Reference Library / Blueprints Wissensdokumente Weekly Sync Forge Log Protokolle und Journal-Eintr\u00e4ge"},{"location":"CLAUDE/#git-commit-conventions","title":"Git Commit Conventions","text":"<p>Die Schmiede-Metapher spiegelt sich auch in Commit-Messages wider:</p> <ul> <li><code>SPARK: [Idee]</code> \u2192 Neue Idee hinzugef\u00fcgt (via <code>/brainstorm</code>)</li> <li><code>PLAN: [Task]</code> \u2192 Spark in Stock Items zerlegt (via <code>/plan</code>)</li> <li><code>FORGE: [Task]</code> \u2192 Aufgabe wird bearbeitet (in Arbeit verschoben)</li> <li><code>TEMPER: [Task]</code> \u2192 Aufgabe abgeschlossen (in Done verschoben)</li> <li><code>BLUEPRINT: [Strategie]</code> \u2192 Vision/Strategie-Update</li> </ul>"},{"location":"CLAUDE/#ordnerstrukur","title":"Ordnerstrukur","text":"<ul> <li><code>README.md</code>: (Diese Datei) Der Eingang zur Schmiede.</li> <li><code>01_BLUEPRINTS/</code>: Die \"gro\u00dfen\" Pl\u00e4ne. Vision, Strategie, Roadmap. Was wollen wir bauen?</li> <li><code>02_SPARK_CHAMBER/</code>: Unser Ideenraum. Jeder Funke, jede neue Idee kommt als <code>.md</code>-Datei hier hinein. Unstrukturiert, roh, lebendig.</li> <li><code>03_THE_FORGE/</code>: Unser dynamisches Kanban-Board. Der Status einer Aufgabe wird durch ihren Ort definiert:<ul> <li><code>01_Stock/</code>: Rohmaterial. Aufgaben, die bereit zum Schmieden sind.</li> <li><code>02_At_the_Anvil/</code>: Hier wird aktiv gearbeitet. Das Metall ist hei\u00df, die H\u00e4mmer schwingen.</li> <li><code>03_Tempered/</code>: Geh\u00e4rtet und fertig. Abgeschlossen, bereit f\u00fcr Feedback oder als Artifact archiviert.</li> </ul> </li> <li><code>04_FORGE_LOG/</code>: Der Schl\u00fcssel f\u00fcr asynchrone Arbeit. W\u00f6chentliche Updates, wichtige Entscheidungen oder Probleme werden hier als datierte <code>.md</code>-Datei abgelegt. Das Logbuch der Schmiede.</li> <li><code>05_REFERENCE_LIBRARY/</code>: Statisches Wissen. Konkurrenzanalysen, technische Konzepte, UI-Prinzipien. Die Bibliothek des Master Smith.</li> </ul>"},{"location":"CLAUDE/#benutzer","title":"Benutzer","text":"<ul> <li>Tobias: Master Smith</li> <li>Michi: Apprentice / Rapid Prototyping</li> <li>Tim: Apprentice / Rapid Prototyping</li> </ul>"},{"location":"CLAUDE/#was-nicht-tun","title":"Was NICHT tun","text":"<ul> <li>\u274c Keine Fantasy-Sprache in Code-Kommentaren</li> <li>\u274c Keine \"Rollenspiel\"-Texte in technischen Spezifikationen</li> <li>\u274c Keine erzwungenen Metaphern, wenn Standard-Begriffe klarer sind</li> </ul> <p>Die Schmiede-Terminologie ist ein Werkzeug f\u00fcr Organisation und Kultur, kein Selbstzweck.</p>"},{"location":"02_SPARK_CHAMBER/2025-10-29-Multi-Channel-AI-Tutor-with-Memory/","title":"Multi-Channel AI-Tutor with Memory","text":""},{"location":"02_SPARK_CHAMBER/2025-10-29-Multi-Channel-AI-Tutor-with-Memory/#erstellt","title":"Erstellt","text":"<p>2025-10-29 - Tobias Waggoner</p>"},{"location":"02_SPARK_CHAMBER/2025-10-29-Multi-Channel-AI-Tutor-with-Memory/#vision-in-einem-satz","title":"Vision in einem Satz","text":"<p>Ein AI-Tutor, der \u00fcber Web-UI und Discord erreichbar ist, sich an jeden User individuell erinnert und dessen Pers\u00f6nlichkeit im Dialog anpassbar ist - ohne ein einziges Formular.</p>"},{"location":"02_SPARK_CHAMBER/2025-10-29-Multi-Channel-AI-Tutor-with-Memory/#zielgruppe-motivation","title":"Zielgruppe &amp; Motivation","text":"<ul> <li>Prim\u00e4re Nutzer: Entwickler-Team + 2-3 Freunde von Tim/Michi (erste Tester)</li> <li>Motivationale Treiber:</li> <li>\"Cooler als ChatGPT\" - etwas, das sich pers\u00f6nlich anf\u00fchlt</li> <li>Niedrigschwelliger Einstieg: Dort chatten, wo man eh schon ist (Discord)</li> <li>Der Bot passt sich an - nicht der User an den Bot</li> </ul>"},{"location":"02_SPARK_CHAMBER/2025-10-29-Multi-Channel-AI-Tutor-with-Memory/#beschreibung","title":"Beschreibung","text":""},{"location":"02_SPARK_CHAMBER/2025-10-29-Multi-Channel-AI-Tutor-with-Memory/#user-journey-erste-interaktion","title":"User Journey: Erste Interaktion","text":"<p>Alex, 16 Jahre, loggt sich das erste Mal ein (Web-UI oder Discord):</p> <ol> <li>Erster Kontakt:</li> <li>Der Bot startet neutral und freundlich</li> <li>Im nat\u00fcrlichen Gespr\u00e4chsfluss fragt er: \"Wie soll ich eigentlich mit dir reden? Eher locker wie ein Kumpel, sachlich wie ein Coach, oder gemeinsam am lernen?\"</li> <li>Alex antwortet im Dialog - keine Dropdown, kein Formular</li> <li> <p>Der Bot w\u00e4hlt daraufhin eine von 3-4 Default-Personalities als Startpunkt</p> </li> <li> <p>Erste Gespr\u00e4che:</p> </li> <li>Alex chattet mit dem Bot \u00fcber beliebige Themen (noch kein Schul-Fokus)</li> <li>Im Flow stellt der Bot gelegentlich Profil-Fragen (Name, Alter, Interessen) - nur wenn es passt</li> <li> <p>Alex kann jederzeit sagen \"kein Bock auf Fragen\" \u2192 Bot stoppt f\u00fcr diese Session</p> </li> <li> <p>Personality-Anpassung:</p> </li> <li>Alex sagt im Chat: \"Kannst du bitte lockerer sein?\"</li> <li>Bot erkennt die Anfrage via Tool-Call</li> <li>Im Hintergrund: LLM-Call passt den Personality-Prompt an (mit Guardrails)</li> <li> <p>Bot antwortet direkt in neuem Stil</p> </li> <li> <p>Memory in Action:</p> </li> <li>Alex chattet montags im Web-UI, mittwochs auf Discord</li> <li>Der Bot erinnert sich: \"Hey, wir hatten neulich \u00fcber [X] geredet - willst du da weiter machen?\"</li> <li> <p>Zwischen den Sessions: Bot \"denkt nach\" (asynchroner Prozess) und bereitet Themen-Hints f\u00fcr das n\u00e4chste Gespr\u00e4ch vor</p> </li> <li> <p>Channel-Awareness:</p> </li> <li>Auf Discord: Bot ist lockerer, nutzt Emojis, bietet Reactions als Quick Actions (\ud83d\udc4d = next, \ud83e\udd14 = mehr Details)</li> <li>Im Web-UI: Bot ist strukturierter, formatiert Antworten klarer</li> </ol>"},{"location":"02_SPARK_CHAMBER/2025-10-29-Multi-Channel-AI-Tutor-with-Memory/#kern-features","title":"Kern-Features","text":""},{"location":"02_SPARK_CHAMBER/2025-10-29-Multi-Channel-AI-Tutor-with-Memory/#1-multi-channel-chat","title":"1. Multi-Channel-Chat","text":"<ul> <li>User kann \u00fcber Web-UI oder Discord mit dem Bot chatten</li> <li>Gleicher Bot, gleiches Memory, verschiedene Kan\u00e4le</li> <li>User-Identifikation \u00fcber Authentifizierung (Discord-User \u2194 Web-User Mapping)</li> </ul>"},{"location":"02_SPARK_CHAMBER/2025-10-29-Multi-Channel-AI-Tutor-with-Memory/#2-conversation-memory","title":"2. Conversation Memory","text":"<ul> <li>Simples Log (Datei oder DB) speichert alle Gespr\u00e4che pro User</li> <li>Bot \"erinnert\" sich an vorherige Chats</li> <li>Memory funktioniert kanal\u00fcbergreifend</li> </ul>"},{"location":"02_SPARK_CHAMBER/2025-10-29-Multi-Channel-AI-Tutor-with-Memory/#3-ai-first-personality-customizing","title":"3. AI-First Personality-Customizing","text":"<ul> <li>Keine UI-Formulare - alles im Dialog</li> <li>User sagt: \"Sei lockerer\" \u2192 Bot passt sich an</li> <li>Technisch: Tool-Call erkennt Anpassungswunsch \u2192 zweiter LLM-Call schreibt neuen Personality-Prompt (mit Guardrails)</li> <li>User darf den Bot \"kaputt-prompten\" (Early Stage = Vertrauen in Tester)</li> </ul>"},{"location":"02_SPARK_CHAMBER/2025-10-29-Multi-Channel-AI-Tutor-with-Memory/#4-naturliches-onboarding","title":"4. Nat\u00fcrliches Onboarding","text":"<ul> <li>Kein festes Onboarding-Script</li> <li>Bot stellt Profil-Fragen (Name, Alter, Interessen, Pr\u00e4ferenzen) im nat\u00fcrlichen Gespr\u00e4chsfluss</li> <li>User kann ablehnen \u2192 Bot fragt in dieser Session nicht weiter</li> <li>Profil-Struktur: JSON/YAML (Details offen)</li> </ul>"},{"location":"02_SPARK_CHAMBER/2025-10-29-Multi-Channel-AI-Tutor-with-Memory/#5-default-personality-auswahl","title":"5. Default-Personality-Auswahl","text":"<ul> <li>Beim ersten Chat: Bot fragt im Dialog, welcher Stil passt</li> <li>3-4 Default-Personalities als Startpunkt (z.B. \"Kumpel\", \"Coach\", \"Entdecker\")</li> <li>Diese wird sp\u00e4ter vom User weiter customized</li> </ul>"},{"location":"02_SPARK_CHAMBER/2025-10-29-Multi-Channel-AI-Tutor-with-Memory/#6-channel-spezifisches-prompting","title":"6. Channel-spezifisches Prompting","text":"<ul> <li>Discord: Lockerer Ton, Emojis, Reactions (\ud83d\udc4d\ud83e\udd14\ud83d\udcdd) als Quick Actions</li> <li>Web-UI: Strukturierter, formatiert, klarer</li> <li>Automatisch per Code injected (kein User-Setting)</li> </ul>"},{"location":"02_SPARK_CHAMBER/2025-10-29-Multi-Channel-AI-Tutor-with-Memory/#7-asynchroner-hintergrund-denkprozess","title":"7. Asynchroner Hintergrund-Denkprozess","text":"<ul> <li>Bot \"denkt nach\", wenn User offline ist</li> <li>\u00dcberlegt sich Themen f\u00fcr das n\u00e4chste Gespr\u00e4ch</li> <li>Hints werden beim n\u00e4chsten Login in System-Prompt injected</li> <li>Trigger: Nach jedem Chat (zeitgesteuert oder Flag-basiert)</li> </ul>"},{"location":"02_SPARK_CHAMBER/2025-10-29-Multi-Channel-AI-Tutor-with-Memory/#technisches-fundament-grob","title":"Technisches Fundament (grob)","text":"<ul> <li>Keine komplexen Agents: Nur Chat + Memory Log</li> <li>Kein Web-Zugriff: Nur LLM-Calls</li> <li>Tool-Calling: F\u00fcr Personality-Anpassung, Discord Reactions</li> <li>Simple Architektur: Conversation Log (Datei oder DB), User-Profil (JSON/YAML)</li> </ul>"},{"location":"02_SPARK_CHAMBER/2025-10-29-Multi-Channel-AI-Tutor-with-Memory/#was-nicht-im-scope-ist","title":"Was NICHT im Scope ist","text":"<ul> <li>\u274c Slash-Commands (z.B. <code>/show-prompt</code>)</li> <li>\u274c Gamification (Streaks, XP, Achievements)</li> <li>\u274c Auto-Summaries nach jedem Chat</li> <li>\u274c Mini-Challenges</li> <li>\u274c Lern-Content / Schul-Bezug (kommt sp\u00e4ter)</li> <li>\u274c Komplexe UI-Features (alles AI-first im Dialog)</li> </ul>"},{"location":"02_SPARK_CHAMBER/2025-10-29-Multi-Channel-AI-Tutor-with-Memory/#nachste-schritte","title":"N\u00e4chste Schritte","text":"<ul> <li>[ ] Entscheidung: 3-4 Default-Personalities definieren (konkrete Prompts)</li> <li>[ ] Entscheidung: Profil-Fragen festlegen (welche Kern-Infos braucht der Bot?)</li> <li>[ ] Architektur: Tech-Stack kl\u00e4ren (Backend, Discord-Bot-Framework, Memory-Storage)</li> <li>[ ] Design: Erste Web-UI-Skizzen (minimalistisch, Chat-fokussiert)</li> <li>[ ] Bereit f\u00fcr: Stock (sobald Architektur-Entscheidungen getroffen sind)</li> </ul> <p>Status: Ready to Forge \ud83d\udd28</p>"},{"location":"04_FORGE_LOG/2025-10-29/","title":"Change Log vom 2025-10-29","text":""},{"location":"04_FORGE_LOG/2025-10-29/#130000-tobias","title":"13:00:00 - Tobias","text":"<p>Initiale Einrichtung des Mindforge Work Repositories abgeschlossen:</p> <ul> <li>Grundstruktur des Repositories angelegt (Ordnerstruktur gem\u00e4\u00df Schmiede-Konzept)</li> <li>CLAUDE.md und README.md mit Prozess-Anweisungen erstellt</li> <li>GitHub Action konfiguriert: Automatische Generierung einer Website aus Markdown (via Obsidian) und Publishing als GitHub Page</li> <li>Action getestet und funktionsf\u00e4hig</li> <li>Repository ist grundlegend einsatzbereit, Inhalte folgen</li> </ul> <p>Status: Schmiede ist er\u00f6ffnet und bereit f\u00fcr die Arbeit.</p>"},{"location":"04_FORGE_LOG/2025-10-29/#150500-tobias","title":"15:05:00 - Tobias","text":"<p>Erster Spark der Schmiede erstellt durch strukturiertes Brainstorming:</p> <ul> <li>Brainstorming-Session: Multi-Channel AI-Tutor mit Memory-Funktion durchdacht</li> <li>Slash-Command <code>/brainstorm</code> erstellt: Strukturierter Prozess f\u00fcr Feature-Ideation mit sokratischem Dialog</li> <li>Spark dokumentiert: <code>02_SPARK_CHAMBER/2025-10-29-Multi-Channel-AI-Tutor-with-Memory.md</code></li> <li>Kern-Features definiert:</li> <li>Multi-Channel-Chat (Web-UI + Discord)</li> <li>Conversation Memory (kanal\u00fcbergreifend)</li> <li>AI-First Personality-Customizing (Dialog-basiert, keine UI-Formulare)</li> <li>Nat\u00fcrliches Onboarding im Gespr\u00e4chsfluss</li> <li>Channel-spezifisches Prompting (Discord locker, Web strukturiert)</li> <li>Asynchroner Hintergrund-Denkprozess zwischen Sessions</li> </ul> <p>Status: Erster Spark committed und gepusht. Bereit f\u00fcr Architektur-Entscheidungen und \u00dcbergang ins Stock.</p>"},{"location":"04_FORGE_LOG/2025-10-29/#165500-tobias","title":"16:55:00 - Tobias","text":"<p>Planning-Prozess definiert und implementiert:</p> <ul> <li>Workflow-Kl\u00e4rung: Sparks werden nicht direkt zu Stock Items, sondern durchlaufen strukturierte Planning-Session</li> <li>Slash-Command <code>/plan</code> erstellt: \u00dcbersetzt Sparks in 1-N umsetzbare Stock Items (User Stories)</li> <li>Prozess: Spark verstehen \u2192 Vertical Slicing vorschlagen \u2192 Iterativer Dialog \u2192 Stock Items erstellen</li> <li>Fokus auf End-to-End-Features mit User-Value-Priorisierung</li> <li>UI/UX-Vision wird im Dialog aktiv erfragt</li> <li>AI-First-Prinzip verankert: Chat/Dialog statt klassische Formulare (wo sinnvoll)</li> <li>Stock Item Template erstellt: <code>05_REFERENCE_LIBRARY/_TEMPLATES/stock-item-template.md</code></li> <li>Enth\u00e4lt: Metadaten, Was/Warum/Wer, User Journey, Definition of Done, Abh\u00e4ngigkeiten, Scope, Notizen</li> <li>Bewusst technikfrei gehalten (f\u00fcr Tim und Michi verst\u00e4ndlich)</li> <li>README.md Anpassung erforderlich: Workflow muss aktualisiert werden (Spark \u2192 Planning \u2192 Stock)</li> </ul> <p>Status: Planning-Prozess dokumentiert. Bereit zum Commit. N\u00e4chster Schritt: README aktualisieren.</p>"},{"location":"05_REFERENCE_LIBRARY/_TEMPLATES/stock-item-template/","title":"{Feature-Name}","text":""},{"location":"05_REFERENCE_LIBRARY/_TEMPLATES/stock-item-template/#metadaten","title":"Metadaten","text":"<ul> <li>Erstellt: {yyyy-MM-dd} - {Name des Erstellers}</li> <li>Source Spark: <code>02_SPARK_CHAMBER/{spark-dateiname}.md</code></li> </ul>"},{"location":"05_REFERENCE_LIBRARY/_TEMPLATES/stock-item-template/#was-wird-gebaut","title":"Was wird gebaut?","text":"<p>{1-2 S\u00e4tze: Was ist dieses Feature aus User-Sicht?}</p>"},{"location":"05_REFERENCE_LIBRARY/_TEMPLATES/stock-item-template/#warum-bauen-wir-das","title":"Warum bauen wir das?","text":"<p>{Motivation: Welchen Wert bringt es? Welches Problem l\u00f6st es?}</p>"},{"location":"05_REFERENCE_LIBRARY/_TEMPLATES/stock-item-template/#wer-nutzt-es","title":"Wer nutzt es?","text":"<p>{Zielgruppe: Sch\u00fcler / Lehrer / Admin / Team-intern}</p>"},{"location":"05_REFERENCE_LIBRARY/_TEMPLATES/stock-item-template/#user-journey-optional","title":"User Journey (optional)","text":"<p>{Wenn sinnvoll: Beschreibe die Nutzung Schritt-f\u00fcr-Schritt aus User-Perspektive}</p> <ol> <li>User macht X</li> <li>System reagiert mit Y</li> <li>User sieht Z</li> </ol>"},{"location":"05_REFERENCE_LIBRARY/_TEMPLATES/stock-item-template/#definition-of-done","title":"Definition of Done","text":"<p>{Wann ist dieses Feature fertig? Konkrete, testbare Kriterien}</p> <ul> <li>[ ] Kriterium 1</li> <li>[ ] Kriterium 2</li> <li>[ ] Kriterium 3</li> </ul>"},{"location":"05_REFERENCE_LIBRARY/_TEMPLATES/stock-item-template/#abhangigkeiten","title":"Abh\u00e4ngigkeiten","text":"<p>{Welche anderen Features/Systeme werden vorausgesetzt?}</p> <ul> <li>Feature X muss existieren</li> <li>System Y muss verf\u00fcgbar sein</li> <li>Oder: Keine Abh\u00e4ngigkeiten</li> </ul>"},{"location":"05_REFERENCE_LIBRARY/_TEMPLATES/stock-item-template/#scope-was-ist-nicht-teil-dieses-features","title":"Scope: Was ist NICHT Teil dieses Features?","text":"<p>{Explizite Abgrenzung: Was bauen wir NICHT in diesem Ticket?}</p> <ul> <li>\u274c Feature A (kommt sp\u00e4ter)</li> <li>\u274c Feature B (out of scope)</li> </ul>"},{"location":"05_REFERENCE_LIBRARY/_TEMPLATES/stock-item-template/#notizen","title":"Notizen","text":"<p>{Freies Feld f\u00fcr weitere Gedanken, Fragen, offene Punkte}</p>"}]}